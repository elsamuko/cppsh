#!/bin/bash

if [ $# -lt 1 ]
then
  echo "Use $0 as interpreter only."
  exit 1
fi

BASE=$(basename "$1")
DIR=$(dirname "$1")

TEMP_DIR="/tmp/cppsh"
TEMP_CPP="$TEMP_DIR/$BASE"
BIN="$TEMP_DIR/${BASE%.cpp}.exe"
HELPER="$TEMP_DIR/compile.bat"
LOG="$TEMP_DIR/error.log"

function create_helper {
	# VS 2015
	if [ -n "$VS140COMNTOOLS" ]; then
		echo -e '@echo off\r\ncall "%VS140COMNTOOLS%..\\..\\VC\\bin\\vcvars32.bat"\r\ncl /EHsc %*' > "$HELPER"
	# VS 2013
	elif [ -n "$VS120COMNTOOLS" ]; then
		echo -e '@echo off\r\ncall "%VS120COMNTOOLS%..\\..\\VC\\bin\\vcvars32.bat"\r\ncl /EHsc %*' > "$HELPER"
	# VS 2012
	elif [ -n "$VS110COMNTOOLS" ]; then
		echo -e '@echo off\r\ncall "%VS110COMNTOOLS%..\\..\\VC\\bin\\vcvars32.bat"\r\ncl /EHsc %*' > "$HELPER"
	fi
    chmod +x "$HELPER"
}

function please_remove {
    if [ -f "$1" ]; then
        rm "$1"
    fi
}

# prepare
mkdir -p $TEMP_DIR

# cleanup
please_remove "$TEMP_CPP"
please_remove "$HELPER"
please_remove "$LOG"

# remove interpreter header
case $(head -n 1 "$1" | xargs) in
    '#!'*)
        echo "// auto-generated" > "$TEMP_CPP"
        tail -n +2 "$1" >> "$TEMP_CPP"
        ;;
    *)
        cp "$1" "$TEMP_CPP"
        ;;
esac

# get md5 sum of source file
case $(uname) in
    Darwin)
        MD5SUM=$(md5 "$TEMP_CPP" | cut -d ' ' -f 4)
        ;;
    *)
        MD5SUM=$(md5sum "$TEMP_CPP" | cut -d ' ' -f 1)
        ;;
esac
BIN="$TEMP_DIR/$MD5SUM.exe"

# compile, if not already compiled
if [ ! -f "$BIN" ]; then
    case $(uname) in
        Linux)
            g++ -I"$DIR" -pthread -std=c++11 "$TEMP_CPP" -o "$BIN" > "$LOG"
            ;;
        Darwin)
            clang++ -I"$DIR" -std=c++1y -stdlib=libc++ "$TEMP_CPP" -o "$BIN" > "$LOG"
            ;;
        CYGWIN*)
            WTEMP_DIR=$(cygpath -w "$TEMP_DIR")
            WTEMP_CPP=$(cygpath -w "$TEMP_CPP")
            WBIN=$(cygpath -w "$BIN")
            create_helper
             "$HELPER" /I "$DIR" "$WTEMP_CPP" /Fo"$WTEMP_DIR\\" /Fe"$WBIN" /D "_UNICODE" /D "UNICODE" 2> /dev/null 1> "$LOG"
            ;;
        *)
            echo "Error: Unknown OS."
            ;;
    esac
fi

#execute
if [ -f "$BIN" ]; then
    shift # removes first argument
    "$BIN" "$@"
else
    cat "$LOG"
fi




